var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { hide } from './hide';
import { show } from './show';
import { validators } from '../utils/validator';
export var toggle = function (element, options) {
    if (validators.hasTagDefined(element)) {
        if (validators.isVisible(element)) {
            var onAnimationEnd_1 = options.onAnimationEnd, onClose_1 = options.onClose;
            hide(element, __assign(__assign({}, options), { onAnimationEnd: function (elementRef) {
                    onClose_1 === null || onClose_1 === void 0 ? void 0 : onClose_1(elementRef);
                    onAnimationEnd_1 === null || onAnimationEnd_1 === void 0 ? void 0 : onAnimationEnd_1(elementRef);
                } }));
        }
        else {
            var onAnimationEnd_2 = options.onAnimationEnd, onOpen_1 = options.onOpen;
            show(element, __assign(__assign({}, options), { onAnimationEnd: function (elementRef) {
                    onOpen_1 === null || onOpen_1 === void 0 ? void 0 : onOpen_1(elementRef);
                    onAnimationEnd_2 === null || onAnimationEnd_2 === void 0 ? void 0 : onAnimationEnd_2(elementRef);
                } }));
        }
    }
    else {
        if (element.offsetHeight === 0) {
            var onAnimationEnd_3 = options.onAnimationEnd, onOpen_2 = options.onOpen;
            show(element, __assign(__assign({}, options), { onAnimationEnd: function (elementRef) {
                    onOpen_2 === null || onOpen_2 === void 0 ? void 0 : onOpen_2(elementRef);
                    onAnimationEnd_3 === null || onAnimationEnd_3 === void 0 ? void 0 : onAnimationEnd_3(elementRef);
                } }));
        }
        else {
            var onAnimationEnd_4 = options.onAnimationEnd, onClose_2 = options.onClose;
            hide(element, __assign(__assign({}, options), { onAnimationEnd: function (elementRef) {
                    onClose_2 === null || onClose_2 === void 0 ? void 0 : onClose_2(elementRef);
                    onAnimationEnd_4 === null || onAnimationEnd_4 === void 0 ? void 0 : onAnimationEnd_4(elementRef);
                } }));
        }
    }
};
//# sourceMappingURL=toggle.js.map
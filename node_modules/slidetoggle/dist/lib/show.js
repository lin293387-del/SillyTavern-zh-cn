import { libConfig } from '../config';
import { validators } from '../utils/validator';
export var show = function (element, _a) {
    var _b = _a.miliseconds, miliseconds = _b === void 0 ? 1000 : _b, onAnimationEnd = _a.onAnimationEnd, onAnimationStart = _a.onAnimationStart, _c = _a.elementDisplayStyle, elementDisplayStyle = _c === void 0 ? 'block' : _c;
    if (validators.isVisible(element)) {
        return;
    }
    element.setAttribute(libConfig.tag, libConfig.values.visible);
    onAnimationStart === null || onAnimationStart === void 0 ? void 0 : onAnimationStart(element);
    element.style.height = 'auto';
    element.style.overflow = 'hidden';
    element.style.display = elementDisplayStyle;
    var animationRef = element.animate([{ height: '0px' }, { height: "".concat(element.offsetHeight, "px") }], { duration: miliseconds });
    animationRef.addEventListener('finish', function () {
        element.style.height = '';
        element.style.overflow = '';
        onAnimationEnd === null || onAnimationEnd === void 0 ? void 0 : onAnimationEnd(element);
    });
};
//# sourceMappingURL=show.js.map